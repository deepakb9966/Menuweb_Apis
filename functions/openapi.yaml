openapi: 3.0.0
info:
  title: Order_menu OpenAPI
  description: Order_menu Service
  version: 0.0.1
servers:
  - url: http://localhost:8082/
    description: Local Dev Server
paths:
  /Categories/getAll:
    get:
      tags:
        - Categories
      parameters:
        # - $ref: "#/components/parameters/CategorieID"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/directionParam"
        - $ref: "#/components/parameters/sortByFieldParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesPagedResultDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
  /Categories/get:
    get:
      tags:
        - Categories
      parameters:
        - $ref: "#/components/parameters/CategorieIDParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /Categories/create:
    post:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriesDto"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /Categories/update:
    put:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriesDto"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /Categories/delete:
    delete:
      tags:
        - Categories
      parameters:
        - $ref: "#/components/parameters/CategorieIDParam"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /SubCategories/getAll:
    get:
      tags:
        - SubCategories
      parameters:
        - $ref: "#/components/parameters/CategorieIDParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/directionParam"
        - $ref: "#/components/parameters/sortByFieldParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategoriesPagedResultDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /SubCategories/get:
    get:
      tags:
        - SubCategories
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategoriesDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /SubCategories/create:
    post:
      tags:
        - SubCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubCategoriesDto"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategoriesDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /SubCategories/update:
    put:
      tags:
        - SubCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubCategoriesDto"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategoriesDto"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  /SubCategories/delete:
    delete:
      tags:
        - SubCategories
      parameters:
        - $ref: "#/components/parameters/CategorieIDParam"
        - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          $ref: "#/components/responses/subcategorieSuccess"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/ResourceNotFoundError"
        "422":
          $ref: "#/components/responses/UnAcceptableInputs"
  

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    CategorieIDParam:
      name: CategorieID
      in: query
      required: true
      schema:
        type: string
    idParam:
      name: id
      in: query
      required: true
      schema:
        type: string
    limitParam:
      name: Limit
      in: query
      schema:
        type: integer
        nullable: true
    directionParam:
      name: Direction
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
    sortByFieldParam:
      name: SortByField
      in: query
      schema:
        type: string
        nullable: true
  responses:
    subcategorieSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Success:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
           
    ResourceNotFoundError:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageDto"
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageDto"
    UnAcceptableInputs:
      description: Invalid Inputs
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageDto"
  schemas:
    MessageDto:
      type: object
      properties:
        message:
          type: string
      required:
        - message
      
    CategoriesPagedResultDto:
      type: object
      properties:
        totalCount:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/CategoriesDto"
    SubCategoriesPagedResultDto:
      type: object
      properties:
          totalCount:
            type: integer
          items:
            type: array
            items:
              $ref: "#/components/schemas/SubCategoriesDto"
    CategoriesDto:
      type: object
      properties:
        CategorieName:
          type: string
        CategorieID:
          type: string
        CategorieStatus:
          type: boolean
        CategorieImage:
          type: string
      required:
        - CategorieName
        - CategorieStatus
        - CategorieImage
        - CategorieID
    SubCategoriesDto:
      type: object
      properties:
        Name:
          type: string
        CategorieID:
          type: string
        Status:
          type: boolean
        Image:
          type: string
        Price:
          type: string
        Description:
          type: string
        id:
          type: string

